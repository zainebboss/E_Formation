security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    always_authenticate_before_granting: true
    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_SUPER_ADMIN
        ROLE_FORMATEUR: ROLE_FORMATEUR
        ROLE_APRENANT: ROLE_APRENANT
    providers:
        user_provider:
            entity:
                # the class of the entity that represents users
                class: 'App\Entity\User'
                # the property to query by - e.g. username, email, etc
                property: 'email'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/apprenant/new, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }
        - { path: ^/apprenant, roles: [ROLE_SUPER_ADMIN,ROLE_APPRENANT] }
        - { path: ^/formateur, roles: ROLE_FORMATEUR }
        - { path: ^/inscription, roles: ROLE_APPRENANT }
        - { path: ^/avis/formateurs, roles: ROLE_APPRENANT }
        - { path: ^/avis/new, roles: ROLE_APPRENANT }
        - { path: ^/avis/show, roles: ROLE_APPRENANT }
        - { path: ^/editProfil, roles: ROLE_APPRENANT }
        - { path: ^/updatepassword, roles: ROLE_APPRENANT }

